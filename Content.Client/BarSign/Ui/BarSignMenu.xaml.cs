using System.Linq;
using Content.Client.UserInterface.Controls;
using Content.Shared.BarSign;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.BarSign.Ui;

[GenerateTypedNameReferences]
public sealed partial class BarSignMenu : FancyWindow
{
    private readonly IPrototypeManager _prototype;

    private string? _currentId;

    private readonly List<BarSignPrototype> _cachedPrototypes = new();

    public event Action<string>? OnSignSelected;

    public BarSignMenu(EntityUid owner, IEntityManager entMan, IPrototypeManager protoMan)
    {
        RobustXamlLoader.Load(this);
        _prototype = protoMan;
        _currentId = entMan.GetComponentOrNull<BarSignComponent>(owner)?.Current;

        _cachedPrototypes.Clear();
        _cachedPrototypes = Shared.BarSign.BarSignSystem.GetAllBarSigns(_prototype)
            .OrderBy(p => Loc.GetString(p.Name))
            .ToList();
        foreach (var proto in _cachedPrototypes)
        {
            SignOptions.AddItem(Loc.GetString(proto.Name));
        }

        SignOptions.OnItemSelected += idx =>
        {
            OnSignSelected?.Invoke(_cachedPrototypes[idx.Id].ID);
            SignOptions.SelectId(idx.Id);
        };

        if (_currentId != null)
        {
            var idx = _cachedPrototypes.IndexOf(_prototype.Index<BarSignPrototype>(_currentId));
            SignOptions.TrySelectId(idx);
        }
    }

    public void UpdateState(BarSignBuiState buiState)
    {
        if (_currentId != null && buiState.Sign == _currentId)
            return;
        _currentId = buiState.Sign;
        var idx = _cachedPrototypes.IndexOf(_prototype.Index(buiState.Sign));
        SignOptions.TrySelectId(idx);
    }
}
