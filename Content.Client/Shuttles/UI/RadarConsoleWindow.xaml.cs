using Content.Client.Computer;
using Content.Client.UserInterface.Controls;
using Content.Shared.Shuttles.BUIStates;
using Content.Shared.Shuttles.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;
using Robust.Shared.Timing;

namespace Content.Client.Shuttles.UI;

[GenerateTypedNameReferences]
public sealed partial class RadarConsoleWindow : FancyWindow,
    IComputerWindow<NavInterfaceState>
{
    [Dependency] private readonly IEntityManager _entMan = default!;

    private EntityUid _owner;

    public RadarConsoleWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void UpdateState(EntityUid owner, NavInterfaceState scc)
    {
        RadarScreen.UpdateState(scc);
        _owner = owner;
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);
        if (_entMan.TryGetComponent<RadarConsoleComponent>(_owner, out var radar))
            RadarScreen.RotateWithEntity = radar.FollowEntity;
    }
}
